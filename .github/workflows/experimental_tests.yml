# This is a basic workflow to help you get started with Actions

name: Test Experimental Features

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    POWERSHELL_TELEMETRY_OPTOUT: 1
    PSDisableModuleAnalysisCacheCleanup: 1
    # for use by the Windows runner (ignored by the others):
    SCONS_CACHE_MSVC_CONFIG: 1
    VCPKG_DISABLE_METRICS: 1
    VSCMD_SKIP_SENDTELEMETRY: 1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  experimental:

    strategy:
      fail-fast: false
      matrix:
        # In the 2nd half of 2022 the setup-mingw was often failing on
        # windows-latest, when 2022 became the latest. Now 2025 is out,
        # and 2019 is being retired, we need some kind of a solution.
        cfg: [
          {os: 'ubuntu-latest', arg: ''},
          {os: 'windows-latest', args: ''},
          {os: 'macos-latest', args: '--exclude-list=macos_ci_skip.txt'}
        ]
        # os: ['ubuntu-latest', 'windows-2019', 'macos-latest']

    # The type of runner that the job will run on
    runs-on: ${{ matrix.cfg.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # experiment: maybe don't need this?
      # update: looks like we do: with this commented out, the build hung
      # - name: Set up MinGW
      #   uses: egor-tensin/setup-mingw@v2.2.0
      #   if: matrix.os == 'windows-2019'
      #   with:
      #     platform: x64
      #     static: 0

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.cfg.os == 'windows-latest'
        with:
          msystem: UCRT64
          update: false
          install: git mingw-w64-ucrt-x86_64-gcc

      - name: Set up Python 3.11 ${{ matrix.cfg.os }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies including ninja ${{ matrix.cfg.os }}
        run: |
          python -m pip install --progress-bar off --upgrade pip
          python -m pip install --progress-bar off ninja psutil
          # sudo apt-get update

      - name: Test experimental packages ${{ matrix.cfg.os }}
        run: |
          python runtest.py ${{ matrix.cfg.args }} test/import.py test/ninja
