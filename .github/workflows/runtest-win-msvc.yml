# This is a basic workflow to help you get started with Actions

name: Test MSVC Optional Environment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    SCONS_CACHE_MSVC_CONFIG: 1
    SCONS_CACHE_MSVC_FORCE_DEFAULTS: 1
    POWERSHELL_TELEMETRY_OPTOUT: 1
    PSDisableModuleAnalysisCacheCleanup: 1
    VCPKG_DISABLE_METRICS: 1
    VSCMD_SKIP_SENDTELEMETRY: 1

jobs:
  runtest-msvc:
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12 ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies ${{ matrix.os }}
        run: |
          python -m pip install --progress-bar off --upgrade pip
          python -m pip install --progress-bar off -r requirements-dev.txt

      - name: runtest ${{ matrix.os }}
        run: |
          python runtest.py --file=testing/ci/msvc_ci_run.txt --time

      - name: Display MSVC cache ${{ matrix.os }}
        if: always()
        run: |
          python testing/ci/windows_msvc_cache.py --skip-populate

      - name: Archive Failed tests ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.os }}-failed-tests
          path: |
            failed_tests.log
